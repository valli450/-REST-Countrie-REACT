[{"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/index.js":"1","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/App.js":"2","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Header/Header.js":"3","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Countries/Countries.js":"4","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Search/Search.js":"5","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Region/Region.js":"6","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/index.js":"7","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/App.js":"8","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Countries/Countries.js":"9","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Search/Search.js":"10","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Region/Region.js":"11","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Header/Header.js":"12"},{"size":147,"mtime":1650896591549,"results":"13","hashOfConfig":"14"},{"size":442,"mtime":1651199912423,"results":"15","hashOfConfig":"14"},{"size":1006,"mtime":1651449052421,"results":"16","hashOfConfig":"14"},{"size":8517,"mtime":1651618087741,"results":"17","hashOfConfig":"14"},{"size":786,"mtime":1651189826066,"results":"18","hashOfConfig":"14"},{"size":1375,"mtime":1651618230159,"results":"19","hashOfConfig":"14"},{"size":147,"mtime":1650896591549,"results":"20","hashOfConfig":"21"},{"size":442,"mtime":1651199912423,"results":"22","hashOfConfig":"21"},{"size":8517,"mtime":1651618087741,"results":"23","hashOfConfig":"21"},{"size":786,"mtime":1651189826066,"results":"24","hashOfConfig":"21"},{"size":1375,"mtime":1651618230159,"results":"25","hashOfConfig":"21"},{"size":1006,"mtime":1651449052421,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19ort6x",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12u4sen",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/index.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/App.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Header/Header.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Countries/Countries.js",["64"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Countries.css\";\n\nfunction Countries() {\n    const [countries, setCountries] = useState([]);\n    const [country, setCountry] = useState([]);\n    const [load, setLoad] = useState(false);\n    const url = \"https://restcountries.com/v3.1/all\";\n\n    const fetchApi = async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n        setCountries(data);\n        setLoad(false)\n    }\n\n    useEffect(() => {\n        fetchApi();\n    }, []);\n\n    const countryData = (g) => {\n        countries.forEach(con =>{\n            if(g === con.name.official){\n                setCountry(con);\n                setLoad(true); \n            }\n        })\n    }\n   \n    window.addEventListener('DOMContentLoaded',() => {\n        const searchUI = document.getElementById(\"searchUI\");\n\n        searchUI.addEventListener(\"keyup\", (e) => {\n            let value = e.target.value;\n            let countryName = document.querySelectorAll(\".country_name\");\n            countryName.forEach(name => {\n                if(name.innerText.toLowerCase().includes(value.toLowerCase())){\n                    name.parentElement.parentElement.style.display = 'flex';\n                }else{\n                    name.parentElement.parentElement.style.display = 'none';\n                }\n            })\n        })\n    })\n\n    window.addEventListener('DOMContentLoaded', () => {\n        const region = document.querySelectorAll(\".region-list\");\n        region.forEach((element) => {\n            element.addEventListener('click', async(t) => {\n                if(document.querySelector(\".chosen\") && document.querySelector(\".chosen\").id === t.target.id){\n                    fetchApi()\n                    document.querySelector(\".chosen\").classList.remove('chosen');\n                }else{\n                    const regionFetch = await fetch(`https://restcountries.com/v3.1/region/${t.target.id}`);\n                    const regionData = await regionFetch.json();\n                    setCountries(regionData);\n                    if(!document.querySelector(\".chosen\")){\n                        document.getElementById(`${t.target.id}`).classList.toggle('chosen');\n                    }else{\n                        document.querySelector(\".chosen\").classList.remove('chosen');\n                        document.getElementById(`${t.target.id}`).classList.toggle('chosen');\n                    }\n                }\n            })\n        })\n    })\n\n    const currenciesc = (f) => {\n        let currenciesList;\n        for(let key in f){\n            currenciesList = f[key].name;\n        }\n        return currenciesList;\n    }\n\n    const languages = (l) => {\n        let languagesList = '';\n        for(let key in l){\n            languagesList = l[key] + \",\";\n        }\n        return languagesList.slice(0, languagesList.length-2);\n    }\n\n    const comm =  (n) =>{\n        let d = String(n);\n        let g = \"\";\n        let j = d.length%3;\n        let o = d.slice(j, d.length);\n        if(j === 0){\n            for(let i = 0; i < d.length; i++){\n                if(i !== 0 && i % 3 === 0){\n                    g+= \",\" + d[i];\n                } else{\n                    g+= d[i];\n                }\n            }\n        }else{\n            g += d.slice(0, j);\n            for(let x = 0; x < o.length; x++){\n                if(x % 3 ===0){\n                    g+= \",\" + o[x]\n                }else{\n                    g+=o[x]\n                }\n                \n            }\n        }\n        return g;\n    }\n\n\n    return (\n            <>\n                {load ? (\n                    <div className=\"wrap\">\n                        <div className=\"btn-back\" onClick={() => {setLoad(false)}}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ionicon\" width=\"16px\" height=\"16px\" viewBox=\"0 0 512 512\">\n                                <title>Arrow Back</title>\n                                <path fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"48\" d=\"M244 400L100 256l144-144M120 256h292\"/>\n                            </svg>\n                            <p>Back</p>\n                        </div>\n                        <div className=\"country\">\n                            <div className=\"country__flag\">\n                                <img src={country.flags.png} alt={`${country.name.official} flag`} />\n                            </div>\n                            <div className=\"country__text\">\n                                <div className=\"country__text__main-inf\">\n                                    <div className=\"country__text__main-inf__left-column\">\n                                        <div className=\"country__text__main-inf__name\">\n                                            <h2>{country.name.official}</h2>\n                                        </div>\n                                        <div className=\"country__text__main-inf__main\">\n                                            <p><span className=\"bold-text\">Native Name:</span> {country.name.common}</p>\n                                            <p><span className=\"bold-text\">Population:</span> {comm(country.population)}</p>\n                                            <p><span className=\"bold-text\">Region:</span> {country.region}</p>\n                                            <p><span className=\"bold-text\">Sub Region:</span> {country.subregion}</p>\n                                            <p><span className=\"bold-text\">Capital:</span> {country.capital}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"country__text__main-inf__right-column\">\n                                        <p><span className=\"bold-text\">Top Level Domain:</span> {country.tld}</p>\n                                        <p><span className=\"bold-text\">Currencies:</span> {currenciesc(country.currencies)}</p>\n                                        <p><span className=\"bold-text\">Languages:</span> {languages(country.languages)}</p>\n                                    </div>\n                                </div>\n                                <div className=\"country__text__border\">\n                                    <p>Border Countries:</p>\n                                    <ul className=\"border-list\">\n                                        {country.borders ? (\n                                            country.borders.map(border => {\n                                                return <li>{border}</li>\n                                                    })\n                                                ):(\n                                                    <p>No borders</p>\n                                                )}\n                                    </ul>\n                                </div>\n                            </div>\n                         </div>\n                    </div>\n                ): (\n                    <div className=\"content__main\">\n                        {countries.map(\n                            ({ name, population, region, capital, flags }) => (\n                                <div className=\"content__main__block\" onClick={() => {countryData(name.official)}}>\n                                    <div className=\"content__main__block__image\">\n                                        <img src={flags.png} />\n                                    </div>\n                                    <div className=\"content__main__block__text\">\n                                        <h2 className=\"country_name\">{name.official}</h2>\n                                        <div className=\"content__main__block__text__about\">\n                                            <p className=\"population\"><span className=\"bold-text\">Population:</span> {comm(population)}</p>\n                                            <p className=\"region\"><span className=\"bold-text\">Region:</span> {region}</p>\n                                            <p className=\"capital\"><span className=\"bold-text\">Capital:</span><span className=\"countryCapital\">{capital}</span></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                            )}\n                    </div>\n                )}\n            </>\n    )\n}\n\nexport default Countries;\n","/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Search/Search.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/countries/src/components/Region/Region.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/index.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/App.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Countries/Countries.js",["65"],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Search/Search.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Region/Region.js",[],[],"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master-React/Новая папка/src/components/Header/Header.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":169,"column":41,"nodeType":"68","endLine":169,"endColumn":64},{"ruleId":"66","severity":1,"message":"67","line":169,"column":41,"nodeType":"68","endLine":169,"endColumn":64},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]