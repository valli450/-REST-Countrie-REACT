{"ast":null,"code":"var _jsxFileName = \"/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master/react/countries/src/components/Countries/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Countries.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Countries() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [load, setLoad] = useState(false);\n  const url = \"https://restcountries.com/v3.1/all\";\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setCountries(data);\n    setLoad(false);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const countryData = g => {\n    console.log(g);\n    countries.forEach(con => {\n      if (g === con.name.official) {\n        console.log(con);\n        setCountry(con);\n        setLoad(true);\n      }\n    });\n  };\n\n  const countryPage = () => {\n    return `\n            <div className=\"btn-back\" onClick={fetchApi}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" width=\"16px\" height=\"16px\" viewBox=\"0 0 512 512\">\n                    <title>Arrow Back</title>\n                    <path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"48\" d=\"M244 400L100 256l144-144M120 256h292\"/>\n                </svg>\n                <p>Back</p>\n            </div>\n            <div className=\"country\">\n                <div class=\"country__flag\">\n                    <img src='${country.flags.png}' alt='${country.name.official} flag' />\n                </div>\n                <div class=\"country__text\">\n            <div class=\"country__text__main-inf\">\n                <div class=\"country__text__main-inf__left-column\">\n                    <div class=\"country__text__main-inf__name\">\n                        <h2>${country.name.official}</h2>\n                    </div>\n                    <div class=\"country__text__main-inf__main\">\n                        <p><span class=\"bold-text\">Native Name:</span> ${country.name.common}</p>\n                        <p><span class=\"bold-text\">Population:</span> ${country.population}</p>\n                        <p><span class=\"bold-text\">Region:</span> ${country.region}</p>\n                        <p><span class=\"bold-text\">Sub Region:</span> ${country.subregion}</p>\n                        <p><span class=\"bold-text\">Capital:</span> ${country.capital}</p>\n                    </div>\n                </div>\n                <div class=\"country__text__main-inf__right-column\">\n                    <p><span class=\"bold-text\">Top Level Domain:</span> ${country.tld}</p>\n                    <p><span class=\"bold-text\">Currencies:</span> ${currenciesc(country.currencies)}</p>\n                    <p><span class=\"bold-text\">Languages:</span> ${languages(country.languages)}</p>\n                </div>\n            </div>\n            <div class=\"country__text__border\">\n                <p>Border Countries:</p>\n                <ul class=\"border-list\">\n                    ${country.borders.length > 0 ? country.borders.map(border => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: border\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No borders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this)}\n                </ul>\n            </div>\n        </div>\n    </div>`;\n  };\n\n  window.addEventListener('DOMContentLoaded', () => {\n    const searchUI = document.getElementById(\"searchUI\");\n    searchUI.addEventListener(\"keyup\", e => {\n      let value = e.target.value;\n      console.log(value);\n      let countryName = document.querySelectorAll(\".country_name\");\n      countryName.forEach(name => {\n        if (name.innerText.toLowerCase().includes(value.toLowerCase())) {\n          name.parentElement.parentElement.style.display = 'flex';\n        } else {\n          name.parentElement.parentElement.style.display = 'none';\n        }\n      });\n    });\n  });\n  window.addEventListener('DOMContentLoaded', () => {\n    const region = document.querySelectorAll(\".region-list\");\n    region.forEach(element => {\n      element.addEventListener('click', async t => {\n        if (document.querySelector(\".chosen\") && document.querySelector(\".chosen\").id === t.target.id) {\n          fetchApi();\n          document.querySelector(\".chosen\").classList.remove('chosen');\n        } else {\n          const regionFetch = await fetch(`https://restcountries.com/v3.1/region/${t.target.id}`);\n          const regionData = await regionFetch.json();\n          setCountries(regionData);\n\n          if (!document.querySelector(\".chosen\")) {\n            document.getElementById(`${t.target.id}`).classList.toggle('chosen');\n          } else {\n            document.querySelector(\".chosen\").classList.remove('chosen');\n            document.getElementById(`${t.target.id}`).classList.toggle('chosen');\n          }\n        }\n      });\n    });\n  });\n\n  const currenciesc = f => {\n    let currenciesList;\n\n    for (let key in f) {\n      currenciesList = f[key].name;\n    }\n\n    return currenciesList;\n  };\n\n  const languages = l => {\n    console.log(l);\n    let languagesList = '';\n\n    for (let key in l) {\n      languagesList = l[key] + \",\";\n    }\n\n    return languagesList.slice(0, languagesList.length - 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: load ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__main\",\n      children: countries.map(_ref => {\n        let {\n          name,\n          population,\n          region,\n          capital,\n          flags\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"content__main__block\",\n          onClick: () => {\n            countryData(name.official);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"content__main__block__image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: flags.png\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"content__main__block__text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              class: \"country_name\",\n              children: name.official\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"content__main__block__text__about\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"population\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"bold-text\",\n                  children: \"Population:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 67\n                }, this), \" \", population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"region\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"bold-text\",\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 63\n                }, this), \" \", region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"capital\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"bold-text\",\n                  children: \"Capital:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 64\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"countryCapital\",\n                  children: capital\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 103\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n\n_s(Countries, \"+Spi7kOl4I93XHNmmxglx5gMYYM=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/Users/Valli/Desktop/project/frontmentor/rest-countries-api-with-color-theme-switcher-master/react/countries/src/components/Countries/Countries.js"],"names":["React","useState","useEffect","Countries","countries","setCountries","country","setCountry","load","setLoad","url","fetchApi","response","fetch","data","json","countryData","g","console","log","forEach","con","name","official","countryPage","flags","png","common","population","region","subregion","capital","tld","currenciesc","currencies","languages","borders","length","map","border","window","addEventListener","searchUI","document","getElementById","e","value","target","countryName","querySelectorAll","innerText","toLowerCase","includes","parentElement","style","display","element","t","querySelector","id","classList","remove","regionFetch","regionData","toggle","f","currenciesList","key","l","languagesList","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Countries.css\";\n\nfunction Countries() {\n    const [countries, setCountries] = useState([]);\n    const [country, setCountry] = useState([]);\n    const [load, setLoad] = useState(false);\n    const url = \"https://restcountries.com/v3.1/all\";\n\n    const fetchApi = async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n        setCountries(data);\n        setLoad(false)\n    }\n\n    useEffect(() => {\n        fetchApi();\n    }, []);\n\n    const countryData = (g) => {\n        console.log(g)\n        countries.forEach(con =>{\n            if(g === con.name.official){\n                console.log(con)\n                setCountry(con);\n                setLoad(true);\n            }\n        })\n    }\n\n    const countryPage = () => {\n        return (`\n            <div className=\"btn-back\" onClick={fetchApi}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ionicon\" width=\"16px\" height=\"16px\" viewBox=\"0 0 512 512\">\n                    <title>Arrow Back</title>\n                    <path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"48\" d=\"M244 400L100 256l144-144M120 256h292\"/>\n                </svg>\n                <p>Back</p>\n            </div>\n            <div className=\"country\">\n                <div class=\"country__flag\">\n                    <img src='${country.flags.png}' alt='${country.name.official} flag' />\n                </div>\n                <div class=\"country__text\">\n            <div class=\"country__text__main-inf\">\n                <div class=\"country__text__main-inf__left-column\">\n                    <div class=\"country__text__main-inf__name\">\n                        <h2>${country.name.official}</h2>\n                    </div>\n                    <div class=\"country__text__main-inf__main\">\n                        <p><span class=\"bold-text\">Native Name:</span> ${country.name.common}</p>\n                        <p><span class=\"bold-text\">Population:</span> ${country.population}</p>\n                        <p><span class=\"bold-text\">Region:</span> ${country.region}</p>\n                        <p><span class=\"bold-text\">Sub Region:</span> ${country.subregion}</p>\n                        <p><span class=\"bold-text\">Capital:</span> ${country.capital}</p>\n                    </div>\n                </div>\n                <div class=\"country__text__main-inf__right-column\">\n                    <p><span class=\"bold-text\">Top Level Domain:</span> ${country.tld}</p>\n                    <p><span class=\"bold-text\">Currencies:</span> ${currenciesc(country.currencies)}</p>\n                    <p><span class=\"bold-text\">Languages:</span> ${languages(country.languages)}</p>\n                </div>\n            </div>\n            <div class=\"country__text__border\">\n                <p>Border Countries:</p>\n                <ul class=\"border-list\">\n                    ${country.borders.length > 0 ? (\n                        country.borders.map(border => {\n                            return <li>{border}</li>\n                                })\n                            ):(\n                                <p>No borders</p>\n                            )}\n                </ul>\n            </div>\n        </div>\n    </div>`\n    )\n    }\n   \n    window.addEventListener('DOMContentLoaded',() => {\n        const searchUI = document.getElementById(\"searchUI\");\n\n        searchUI.addEventListener(\"keyup\", (e) => {\n            let value = e.target.value;\n            console.log(value);\n            let countryName = document.querySelectorAll(\".country_name\");\n\n            countryName.forEach(name => {\n                if(name.innerText.toLowerCase().includes(value.toLowerCase())){\n                    name.parentElement.parentElement.style.display = 'flex';\n                }else{\n                    name.parentElement.parentElement.style.display = 'none';\n                }\n            })\n        })\n    })\n\n    window.addEventListener('DOMContentLoaded', () => {\n        const region = document.querySelectorAll(\".region-list\");\n        region.forEach((element) => {\n            element.addEventListener('click', async(t) => {\n                if(document.querySelector(\".chosen\") && document.querySelector(\".chosen\").id === t.target.id){\n                    fetchApi()\n                    document.querySelector(\".chosen\").classList.remove('chosen');\n                }else{\n                    const regionFetch = await fetch(`https://restcountries.com/v3.1/region/${t.target.id}`);\n                    const regionData = await regionFetch.json();\n                    setCountries(regionData);\n                    if(!document.querySelector(\".chosen\")){\n                        document.getElementById(`${t.target.id}`).classList.toggle('chosen');\n                    }else{\n                        document.querySelector(\".chosen\").classList.remove('chosen');\n                        document.getElementById(`${t.target.id}`).classList.toggle('chosen');\n                    }\n                }\n            })\n        })\n    })\n\n    const currenciesc = (f) => {\n        let currenciesList;\n        for(let key in f){\n            currenciesList = f[key].name;\n        }\n        return currenciesList;\n    }\n\n    const languages = (l) => {\n        console.log(l)\n        let languagesList = '';\n        for(let key in l){\n            languagesList = l[key] + \",\";\n        }\n        return languagesList.slice(0, languagesList.length-2);\n    }\n\n\n    return (\n            <>\n                {load ? (\n                    <div className=\"wrap\">\n                       {}\n                    </div>\n                ): (\n                    <div className=\"content__main\">\n                        {countries.map(\n                            ({ name, population, region, capital, flags }) => (\n                                <div class=\"content__main__block\" onClick={() => {countryData(name.official)}}>\n                                    <div class=\"content__main__block__image\">\n                                        <img src={flags.png} />\n                                    </div>\n                                    <div class=\"content__main__block__text\">\n                                        <h2 class=\"country_name\">{name.official}</h2>\n                                        <div class=\"content__main__block__text__about\">\n                                            <p class=\"population\"><span class=\"bold-text\">Population:</span> {population}</p>\n                                            <p class=\"region\"><span class=\"bold-text\">Region:</span> {region}</p>\n                                            <p class=\"capital\"><span class=\"bold-text\">Capital:</span><span className=\"countryCapital\">{capital}</span></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                            )}\n                    </div>\n                )}\n            </>\n    )\n}\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}